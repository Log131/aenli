from datas import *

import schedule

import datetime
from start import bot
import asyncio
from war import bot_5
import time





async def check_s():
    async with aiosqlite.connect('teg.db') as tc:
        async with tc.execute('SELECT user_id,first_name,time_delete,username FROM users') as t:
            s = await t.fetchall()
        
        time_x = datetime.datetime.now().strftime('%Y-%m-%d %H:%M')
        for xdx in s:
            print(xdx)
            try:
                if xdx[2] is None or xdx[2] == 0:
                    pass
                else:
                    if datetime.datetime.now() >= datetime.datetime.strptime(xdx[2], '%Y-%m-%d %H:%M'):
                        try:
                            await bot.send_message(chat_id=xdx[0], text='–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –∞–¥–º–∏–Ω–∫–∞')
                        except Exception as e:
                            print(e)
                        
                        
                        
                        
                        
                        await bot.send_message(chat_id=6203509782, text=f'–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è : @{xdx[3]} - {xdx[1]} ID - {xdx[0]} –ó–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ê–¥–º–∏–Ω–∫–∞')
                        async with aiosqlite.connect('teg.db') as tc:
                            await tc.execute('DELETE FROM users WHERE user_id = ?', (xdx[0],))
                            await tc.commit()
            except Exception as e:
                print(e)

async def check_():
    async with aiosqlite.connect('teg.db') as tc:
        async with tc.execute('SELECT user_id,time_delete FROM users') as t:
            s = await t.fetchall()
    
    for xdx in s:
        try:
            if xdx[1] is None or xdx[1] == 0:
                pass
            else:
                try:
                    if datetime.datetime.now() >= datetime.datetime.strptime(xdx[1], '%Y-%m-%d %H:%M') - datetime.timedelta(days=1) or datetime.datetime.now() >= datetime.datetime.strptime(xdx[1], '%Y-%m-%d %H:%M') - datetime.timedelta(minutes=30):
                        try:
                            await bot.send_message(chat_id=xdx[0], text='–£ –≤–∞—Å –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ /start')
                        except Exception as e:
                            print(e)
                except:
                    pass
        
        
        
        
        except Exception as e:
            print(e)




def funcs_0():
    s = asyncio.get_event_loop()
    s.run_until_complete(check_())

schedule.every().day.at('09:00').do(funcs_0)

def funcs_5():
    s = asyncio.get_event_loop()
    s.run_until_complete(check_s())

schedule.every(600).seconds.do(funcs_5)



async def sends_():
    try:
        await bot_5.send_message(chat_id=-1001791109996, text='üåü–î—Ä—É–∑—å—è! \n \n –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –≤ –°–£–¢–ö–ò –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –¢–û–õ–¨–ö–û 1 –û–¢–ó–´–í –Ω–∞ –∫–∞–∂–¥–æ–π –ø–ª–æ—â–∞–¥–∫–µ. \n \n –£–≤—ã, –Ω–æ –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –ë–û–õ–ï–ï –û–î–ù–û–ì–û –û–¢–ó–´–í–ê, —Ç–æ –≤–µ–ª–∏–∫ —à–∞–Ω—Å –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è, –∞ —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞. \n \n –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!')
    except:
        pass






def funcs_555():
    s = asyncio.get_event_loop()
    s.run_until_complete(sends_())

schedule.every().day.at('09:00').do(funcs_555)



while True:
    schedule.run_pending()
    time.sleep(5)